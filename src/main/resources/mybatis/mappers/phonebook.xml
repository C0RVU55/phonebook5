<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="phonebook">
	
	<!-- ***주의*** 주소에 공백 있으면 오류남 -->
	
	<!-- 
	1. 쿼리문 작성 : selectList, selectOne, delete, update, insert
	2. 같은 명령어가 또 올 수 있으니까 id로 이름 정함. 
	3. 데이터 표기는 #{}이고 쿼리문 마침표는 생략.
	4. 받을 때는 parameterType="", 내보낼 때는 resultType=""이고 ""에서 자료형 정함. 제대로 됐으면 ctrl+클릭 가능해짐.
	5. 결과값을 내보내는 select 제외하고는 기본적으로 성공한 회수 주는데 resultType으로 받는 게 아니라 dao에서 'int 변수'로 받음.
	-->
	
	<!-- 
	1. 리스트로 받아야 되지만 vo로 뱉은 거 sqlSession에 있는 정보 보고 알아서 리스트로 만들어줌.
	   그래서 resultType을 리스트로 안 씀. 자료형 하나만 있는 거만 넣어야 됨.
	2. 그대로 하면 person_id가 0으로만 나오는데 vo랑 필드명이 달라서 setter가 안 먹어서 그럼. 
	   이때 칼럼명을 아예 바꾸는 게 아니라 'as 칼럼명' 쓰면 됨.
	3. select문에서 resultMap 쓰면 쿼리문 컬럼명 따로 안 바꿔도 됨. resultMap은 같은 select문을 여러 번 써야 될 때 유용함.
	-->
	
	<!-- phoneVo Map -->
	<resultMap id="resultMapPhoneVo" type="com.javaex.vo.PhoneVo" > 
	    <result column="person_id" property="personId" />
	    <result column="name" property="name" />
	    <result column="hp" property="hp" />
	    <result column="company" property="company" />
	</resultMap>
	
	<!-- 전체리스트 가져오기 / selectList2 > resultMap="" 순으로 여기 들어와서 위의 resultMap 들렀다가 나감. -->
	<select id="selectList2" resultMap="resultMapPhoneVo">
		<![CDATA[ 
			SELECT  person_id,
        			name,
       				hp,
      		    	company
			FROM person
			order by person_id desc
		]]>
	</select>
	
	<!-- 쿼리문에서 조건 < > 등을 태그로 인식할 때도 있어서 쿼리문 속 꺽새는 태그로 인식하지 말라고 <![CDATA[]]> 달아줌 -->
	<select id="selectList" resultType="com.javaex.vo.PhoneVo">
		<![CDATA[ 
			SELECT  person_id as personId,
        			name,
       				hp,
      		    	company
			FROM person
			order by person_id desc
		]]>
	</select>
	
	
	
	<!-- 전화번호 등록 / ***getter로 불러옴*** -->
	<insert id="insert" parameterType="com.javaex.vo.PhoneVo"> 
		<![CDATA[ 
			insert into person
			values(SEQ_PERSON_ID.nextval, 
			      #{name}, 
			      #{hp}, 
			      #{company})
		]]>
	</insert>
	
	<!-- 삭제 (파라미터 하나만 받는 경우) / #{}속 변수명 작명은 자유 -->
	<delete id="delete" parameterType="int">
		<![CDATA[ 
			delete from person
			where person_id = #{personId}
		]]>
	</delete>
	
	<!-- 수정폼 1명 정보 가져오기 > personId 받고 맞는 정보vo를 보내야 되니까 parameter, result 자료형 다 씀. -->
	<!-- $ 아니고 # 주의 -->
	<select id="selectOne" parameterType="int" resultType="com.javaex.vo.PhoneVo">
		<![CDATA[
			SELECT  person_id personId,
			        name,
			        hp,
			        company
			FROM person
			where person_id = #{personId}
		]]>
	</select>
	
	<!-- 수정 -->
	<update id="update" parameterType="com.javaex.vo.PhoneVo">
		<![CDATA[
		update person
		set name = #{name},
		    hp = #{hp},
		    company = #{company}
		where person_id = #{personId}
		]]>
	</update>
	
</mapper>
